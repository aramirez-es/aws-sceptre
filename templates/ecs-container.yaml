---
  AWSTemplateFormatVersion: "2010-09-09"
  Description: "Create a ECS container"

  Parameters:
    ECSCluster:
      Type: "String"
    ContainerSecurityGroup:
      Type: "String"
    Listener:
      Type: "String"
    Vpc:
      Type: "String"
    PublicSubnet1:
      Type: "String"
    PublicSubnet2:
      Type: "String"

  Resources:
    Task:
      Type: "AWS::ECS::TaskDefinition"
      Properties:
        Family: app
        Cpu: 256
        Memory: 512
        NetworkMode: awsvpc
        RequiresCompatibilities:
          - FARGATE
        ContainerDefinitions:
          - Name: app
            Image: nginx:1.15
            PortMappings:
              - ContainerPort: 80
                Protocol: tcp

    Service:
      Type: "AWS::ECS::Service"
      DependsOn: ListenerRule
      Properties:
        TaskDefinition: !Ref Task
        Cluster: !Ref ECSCluster
        LaunchType: FARGATE
        DesiredCount: 2
        DeploymentConfiguration:
          MaximumPercent: 200
          MinimumHealthyPercent: 70
        NetworkConfiguration:
          AwsvpcConfiguration:
            AssignPublicIp: ENABLED
            Subnets:
              - !Ref PublicSubnet1
              - !Ref PublicSubnet2
            SecurityGroups:
              - !Ref ContainerSecurityGroup
        LoadBalancers:
          - ContainerName: app
            ContainerPort: 80
            TargetGroupArn: !Ref TargetGroup

    TargetGroup:
      Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
      Properties:
        VpcId: !Ref Vpc
        Port: 80
        Protocol: HTTP
        Matcher:
          HttpCode: 200-299
        HealthCheckIntervalSeconds: 10
        HealthCheckPath: / # Change to /health
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 10
        TargetType: ip

    ListenerRule:
      Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
      Properties:
        ListenerArn: !Ref Listener
        Priority: 2
        Conditions:
          - Field: path-pattern
            Values:
              - /
        Actions:
          - TargetGroupArn: !Ref TargetGroup
            Type: forward 

  Outputs:
    Endpoint:
      Description: container endpoint
      Value: !Join ['', ['http://', !ImportValue LoadBalancerDns, '/']]